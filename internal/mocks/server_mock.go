// Code generated by MockGen. DO NOT EDIT.
// Source: services/server/server.go
//
// Generated by this command:
//
//	mockgen -source=services/server/server.go -destination=mocks/server_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockConfig is a mock of Config interface.
type MockConfig struct {
	ctrl     *gomock.Controller
	recorder *MockConfigMockRecorder
}

// MockConfigMockRecorder is the mock recorder for MockConfig.
type MockConfigMockRecorder struct {
	mock *MockConfig
}

// NewMockConfig creates a new mock instance.
func NewMockConfig(ctrl *gomock.Controller) *MockConfig {
	mock := &MockConfig{ctrl: ctrl}
	mock.recorder = &MockConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfig) EXPECT() *MockConfigMockRecorder {
	return m.recorder
}

// GetCryptoKey mocks base method.
func (m *MockConfig) GetCryptoKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCryptoKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCryptoKey indicates an expected call of GetCryptoKey.
func (mr *MockConfigMockRecorder) GetCryptoKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCryptoKey", reflect.TypeOf((*MockConfig)(nil).GetCryptoKey))
}

// GetDataBaseDSN mocks base method.
func (m *MockConfig) GetDataBaseDSN() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataBaseDSN")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetDataBaseDSN indicates an expected call of GetDataBaseDSN.
func (mr *MockConfigMockRecorder) GetDataBaseDSN() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataBaseDSN", reflect.TypeOf((*MockConfig)(nil).GetDataBaseDSN))
}

// GetFileStoragePath mocks base method.
func (m *MockConfig) GetFileStoragePath() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileStoragePath")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFileStoragePath indicates an expected call of GetFileStoragePath.
func (mr *MockConfigMockRecorder) GetFileStoragePath() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileStoragePath", reflect.TypeOf((*MockConfig)(nil).GetFileStoragePath))
}

// GetMigrationsDir mocks base method.
func (m *MockConfig) GetMigrationsDir() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMigrationsDir")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetMigrationsDir indicates an expected call of GetMigrationsDir.
func (mr *MockConfigMockRecorder) GetMigrationsDir() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMigrationsDir", reflect.TypeOf((*MockConfig)(nil).GetMigrationsDir))
}

// GetRestore mocks base method.
func (m *MockConfig) GetRestore() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRestore")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetRestore indicates an expected call of GetRestore.
func (mr *MockConfigMockRecorder) GetRestore() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRestore", reflect.TypeOf((*MockConfig)(nil).GetRestore))
}

// GetServerAddress mocks base method.
func (m *MockConfig) GetServerAddress() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServerAddress")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetServerAddress indicates an expected call of GetServerAddress.
func (mr *MockConfigMockRecorder) GetServerAddress() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServerAddress", reflect.TypeOf((*MockConfig)(nil).GetServerAddress))
}

// GetShaKey mocks base method.
func (m *MockConfig) GetShaKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShaKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetShaKey indicates an expected call of GetShaKey.
func (mr *MockConfigMockRecorder) GetShaKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShaKey", reflect.TypeOf((*MockConfig)(nil).GetShaKey))
}

// GetStoreInterval mocks base method.
func (m *MockConfig) GetStoreInterval() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStoreInterval")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetStoreInterval indicates an expected call of GetStoreInterval.
func (mr *MockConfigMockRecorder) GetStoreInterval() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStoreInterval", reflect.TypeOf((*MockConfig)(nil).GetStoreInterval))
}
